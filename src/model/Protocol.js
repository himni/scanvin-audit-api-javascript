/**
 * AUDITORIA
 * # Introducão  Seja bem-vindo a documentação da API do [SCANVIN](https://scanvin.com.br) para auditorias    Nossa API foi criada utilizando o padrão [REST](https://restfulapi.net/) e [HATEOAS](https://restfulapi.net/hateoas/), possibilitando a integração de seu sistema ao nosso, e está documentada abaixo.  # Como usar a API?  Logo a seguir você encontrará todos os recursos e métodos suportados pela API, sendo que essa página possibilita que você teste os recursos e métodos diretamente através dela.  # Autenticação  Você precisa de uma [API KEY](https://en.wikipedia.org/wiki/Application_programming_interface_key#HTTP_APIs) para identificar a conta que está realizando solicitações para a API. Você pode obter seu token de autenticação no seu [Painel do Cliente](https://auditoria.scanvin.com.br/client/).  Insira seu token no campo que se encontra topo desta página para testar os métodos da API.  # Webhook  Você também deve configurar seu [Webhook](https://en.wikipedia.org/wiki/Webhook) no [Painel do Cliente](https://auditoria.scanvin.com.br/client/webhook). Quando os resultados da auditoria estiverem disponíveis, uma notificação será enviada para a URL informada, via [HTTP POST](https://en.wikipedia.org/wiki/POST_(HTTP)). A notificação possui ```Content-type``` do tipo ```application/json```. O [JSON](https://en.wikipedia.org/wiki/JSON) postado contém um único campo, ```notification_id```, que contém o identificador único do evento que gerou a notificação. Deve-se então chamar o endpoint ```Inspection - Get Inspection```, informando esse mesmo identificador único, para recuperar os dados da vistoria, e da auditoria realizada.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Picture1 from './Picture1';

/**
* The Protocol model module.
* @module model/Protocol
* @version 1.0
*/
export default class Protocol {
    /**
    * Constructs a new <code>Protocol</code>.
    * @alias module:model/Protocol
    * @class
    * @param clientId {String} Número ou ID do protocolo fornecidos pelo cliente.
    * @param carPlate {String} Número da placa de identificação veicular.
    * @param carState {String} UF da placa de identificação veicular.
    * @param carVin {String} Número de chassi.
    * @param carRenavam {String} Número do RENAVAM.
    * @param engineAccepted {Boolean} Informa se o vistoriador aprovou ou reprovou a numeração do motor.
    * @param vinAccepted {Boolean} Informa se o vistoriador aprovou ou reprovação a numeração do chassi.
    * @param surveyorEmail {String} E-mail do vistoriador.
    * @param pictures {Array.<module:model/Picture1>} Imagens do veículo.
    */

    constructor(clientId, carPlate, carState, carVin, carRenavam, engineAccepted, vinAccepted, surveyorEmail, pictures) {
        
        
        this['client_id'] = clientId;
        this['car_plate'] = carPlate;
        this['car_state'] = carState;
        this['car_vin'] = carVin;
        this['car_renavam'] = carRenavam;
        this['engine_accepted'] = engineAccepted;
        this['vin_accepted'] = vinAccepted;
        this['surveyor_email'] = surveyorEmail;
        this['pictures'] = pictures;
        
    }

    /**
    * Constructs a <code>Protocol</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Protocol} obj Optional instance to populate.
    * @return {module:model/Protocol} The populated <code>Protocol</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Protocol();
                        
            
            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('car_engine')) {
                obj['car_engine'] = ApiClient.convertToType(data['car_engine'], 'String');
            }
            if (data.hasOwnProperty('car_plate')) {
                obj['car_plate'] = ApiClient.convertToType(data['car_plate'], 'String');
            }
            if (data.hasOwnProperty('car_state')) {
                obj['car_state'] = ApiClient.convertToType(data['car_state'], 'String');
            }
            if (data.hasOwnProperty('car_vin')) {
                obj['car_vin'] = ApiClient.convertToType(data['car_vin'], 'String');
            }
            if (data.hasOwnProperty('car_renavam')) {
                obj['car_renavam'] = ApiClient.convertToType(data['car_renavam'], 'String');
            }
            if (data.hasOwnProperty('engine_accepted')) {
                obj['engine_accepted'] = ApiClient.convertToType(data['engine_accepted'], 'Boolean');
            }
            if (data.hasOwnProperty('vin_accepted')) {
                obj['vin_accepted'] = ApiClient.convertToType(data['vin_accepted'], 'Boolean');
            }
            if (data.hasOwnProperty('surveyor_email')) {
                obj['surveyor_email'] = ApiClient.convertToType(data['surveyor_email'], 'String');
            }
            if (data.hasOwnProperty('pictures')) {
                obj['pictures'] = ApiClient.convertToType(data['pictures'], [Picture1]);
            }
        }
        return obj;
    }

    /**
    * Número ou ID do protocolo fornecidos pelo cliente.
    * @member {String} client_id
    */
    client_id = undefined;
    /**
    * Número do motor.
    * @member {String} car_engine
    */
    car_engine = undefined;
    /**
    * Número da placa de identificação veicular.
    * @member {String} car_plate
    */
    car_plate = undefined;
    /**
    * UF da placa de identificação veicular.
    * @member {String} car_state
    */
    car_state = undefined;
    /**
    * Número de chassi.
    * @member {String} car_vin
    */
    car_vin = undefined;
    /**
    * Número do RENAVAM.
    * @member {String} car_renavam
    */
    car_renavam = undefined;
    /**
    * Informa se o vistoriador aprovou ou reprovou a numeração do motor.
    * @member {Boolean} engine_accepted
    */
    engine_accepted = undefined;
    /**
    * Informa se o vistoriador aprovou ou reprovação a numeração do chassi.
    * @member {Boolean} vin_accepted
    */
    vin_accepted = undefined;
    /**
    * E-mail do vistoriador.
    * @member {String} surveyor_email
    */
    surveyor_email = undefined;
    /**
    * Imagens do veículo.
    * @member {Array.<module:model/Picture1>} pictures
    */
    pictures = undefined;




}
